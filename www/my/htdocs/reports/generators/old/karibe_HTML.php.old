<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
</head>
<body style="font-family:Tahoma">
        Оперативный отчет за период с <?="$_REQUEST[datefrom] $_REQUEST[timefrom]"?> по <?="$_REQUEST[dateto] $_REQUEST[timeto]"?>
        <table border="1" cellpadding="5" cellspacing="0" style="font-size: 9pt">
        <thead>
            <tr>
                <th rowspan="2">№ п/п</th>
                <th rowspan="2">Авто</th>
                <th rowspan="2">Госномер</th>
                <th rowspan="2">Дата</th>
                <th rowspan="2">Время<br />движения</th>
                <th rowspan="2">Моточас</th>
                <th rowspan="2">Время<br />стоянки</th>
                <th rowspan="2">Пробег,&nbsp;км</th>
                <th rowspan="2">Топлива в<br />начале</th>
                <th colspan="2">Заправки</th>
                <th colspan="2">Сливы</th>
        	<th rowspan="2">Остаток <br /> Топлива</th>
        	<th rowspan="2">Фактический<br /> расход</th>
        	<th rowspan="2">Средний<br /> расход</th>
            </tr>
    	    <tr>
                <th>Кол-во</th>
                <th>Обьем</th>
                <th>Кол-во</th>
                <th>Обьем</th>
    	    </tr>
        </thead>
        <tbody>
            <?
                include_once("../../config.php");
                
                $row = 1; // текущая строка

                $datefrom = date('Y-m-d', strtotime($_REQUEST['datefrom']));
                $dateto = date('Y-m-d', strtotime($_REQUEST['dateto']));
                $timefrom = $_REQUEST['timefrom'];
                $timeto = $_REQUEST['timeto'];
                $tstimefrom = $datefrom ." ". $timefrom;
		$tstimeto = $dateto ." ". $timeto;
		
                foreach ($_REQUEST['cars'] as $car=>$value) {
                    if ($row > 1) echo "<tr><td colspan='16'>&nbsp;</td><tr>";
		    $count_row=0;
                    $sql = "select gosnum, name, dutmin[1] dut1_min, dutmax[1] dut1_max, dutlitr[1] dut1_litr, dutmin[2] dut2_min, dutmax[2] dut2_max,dutlitr[2] dut2_litr from cars where carid=$car;";

		    //echo get_min_middle_volt($car,$tstimefrom,$tstimeto);
/*
                    $sql = "select gosnum,name,dutmin[1] dut1_min,dutmax[1] dut1_max,dutlitr[1] dut1_litr,dutmin[2] dut2_min,dutmax[2] dut2_max,dutlitr[2] dut2_litr,
        		(select dut[1] from data.gps where carid=$car and tstamp >= '$tstimefrom' order by tstamp limit 1) as dut1_start,
        		(select dut[1] from data.gps where carid=$car and tstamp <= '$tstimeto' order by tstamp desc limit 1) as dut1_end,
        		(select dut[2] from data.gps where carid=$car and tstamp >= '$tstimefrom' order by tstamp limit 1) as dut2_start,
        		(select dut[2] from data.gps where carid=$car and tstamp <= '$tstimeto' order by tstamp desc limit 1) as dut2_end
        		from cars where carid=$car;";
*/
                    $res = pg_query($sql);
                    extract (pg_fetch_array($res), EXTR_OVERWRITE);
                    
                    //echo "<br>".$dut2_min."<br>".$dut2_max."<br>".$dut2_litr;
                    
                    //--------Проверяем настройки ДУТ--------
                    if ($dut1_min && $dut1_max && $dut1_litr) {
                        $tank1_installed = true; // бак №1 установлен и его настройки заполнены
			$em1=$dut1_litr/($dut1_max-$dut1_min);
                    } else {
                      $tank1_installed = false;
                      $em1=0;
                    }
                    if ($dut2_min && $dut2_max && $dut2_litr) {
                        $tank2_installed = true; // бак №2 установлен и его настройки заполнены
                	$em2=$dut2_litr/($dut2_max-$dut2_min);
                    } else {
                      $tank2_installed = false;
                      $em2=0;
                    }
		    
		    //--------######################-----------
			$dc=0;
			$itogo_zap=0;
			$itogo_sliv=0;
			$itogo_col_z=0;
			$itogo_col_s=0;
			$itogo_fact=0;


		    if($em1!=0){
			$x_down1=round(2/$em1);								//Значение частоты при сливе dut1
			$x_up1=round(5/$em1);								//Значение частоты при заправке 
			}
		    if($em2!=0){
			$x_down2=round(2/$em2);								//Значение частоты при сливе dut2
			$x_up2=round(5/$em2);								//Значение частоты при заправке
			}

                    $sql = "select date_part('epoch',tstamp) epoch, dut[1] dut1, dut[2] dut2,volt[1] volt1, volt[2] volt2, dest, lat/600000::real as lat, lon/600000::real as lon, speed, dest, tstamp::date as tstamp, tstamp::timestamp without time zone as tstamp_all from data.gps where carid=$car and tstamp >= '$datefrom $timefrom' and tstamp <= '$dateto $timeto' and lat>0 and lon>0 order by epoch";
                    $res = pg_query($sql);

                    //$speed_average = array(0); // средняя скорость
                    //$speed_max = array(0); // максимальная скорость
                    //$speed_count = 0; // количество треков скорости для определения средней скорости
                    $move_time = array(0); // время движения
                    $stop_time = array(0); // время стоянки
                    $moto_time = array(0); // моточас
                    
                    
                    $distance = array(0); // пройденное расстояние
                    $dut1_fills_count = array(0); // количество заправок
                    $epoch_prev = false; // время предыдущего трека
//		    $moto_time[count($moto_time)] = 0;
/*
		$count_volt1=0;
		$all_volt1=0;
		while ($track = pg_fetch_array($res)){
			extract($track, EXTR_OVERWRITE);
			if($speed==0&&$volt1<1350&&$volt1>1100){
				//echo $volt1."<br>";
				$all_volt1+=$volt1;
				$count_volt1++;
				}
			}
		$volt1_min=$all_volt1/$count_volt1;
		echo round($volt1_min,0);
*/
                    $dut1_fills = array();
                    $dut1_liter_prev = false;
                    $filling_start = false; // флаг начала заправки
                    $dut1_liter_filling_start = 0; // объем бака на момент начала заправки
                    $first_line = true;
                    while ($track = pg_fetch_array($res)) {//STRART-1
                        extract($track, EXTR_OVERWRITE);
			//if($speed==0&&$volt1>1700)echo $volt1."<br>";
			if($count_row==0){$sday=$tstamp_all; $count_row=1;}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                        if (date('j', $epoch) != date('j', $epoch_prev) && $epoch_prev) { // следующий день START-2
                            $speed_average[count($speed_average) - 1] = round($speed_average[count($speed_average) - 1] / $speed_count, 2);
			    
			    $eday=date('Y-m-d H:i:s',$epoch_prev);	//Промежуток для функции 
			
			    //echo "<br>".$sday." ".$eday."<br>";
		if ($tank1_installed || $tank2_installed){

			$dut_start_all=0;
			$dut_end_all=0;
			$dut_fact=0;

                        $sql_dut = "select gosnum,name,dutmin[1] dut1_min,dutmax[1] dut1_max,dutlitr[1] dut1_litr,dutmin[2] dut2_min,dutmax[2] dut2_max,dutlitr[2] dut2_litr,
        		(select dut[1] from data.gps where carid=$car and tstamp >= '$sday' order by tstamp limit 1) as dut1_start,
        		(select dut[1] from data.gps where carid=$car and tstamp <= '$eday' order by tstamp desc limit 1) as dut1_end,
        		(select dut[2] from data.gps where carid=$car and tstamp >= '$sday' order by tstamp limit 1) as dut2_start,
        		(select dut[2] from data.gps where carid=$car and tstamp <= '$eday' order by tstamp desc limit 1) as dut2_end
        		from cars where carid=$car;";

                    $res2 = pg_query($sql_dut);

                    extract (pg_fetch_array($res2), EXTR_OVERWRITE);
		    
			//echo $gosnum."<br>";
			if ($tank1_installed){
				if ($dut1_start>$dut1_min)$dut_start_all+=($dut1_start-$dut1_min)*$em1;
				}
			if ($tank2_installed){
				if ($dut2_start>$dut2_min)$dut_start_all+=($dut2_start-$dut2_min)*$em2;
				}
		    if($dut_start_all>0){
			if ($tank1_installed){
				if ($dut1_end>$dut1_min)$dut_end_all+=($dut1_end-$dut1_min)*$em1;
				}
			if ($tank2_installed){
				if ($dut2_end>$dut2_min)$dut_end_all+=($dut2_end-$dut2_min)*$em2;
				}
			}
			
			//echo "<br>".$dut1_start_all;
			$start_stop = get_data_stops ($car,$sday,$eday);
                        //$start_stop = report_general_dut_get_stops ($car,$sday,$eday);
			
			
			
			//$sum_litr_zapravka[$count]=0;
			//$sum_litr_sliv[$count]=0;
			$count_s=0;
			$count_z=0;
			$sum_litr_zapravka=0;
			$sum_litr_sliv=0;
			
		while (list($k,$mm)=each($start_stop)){
		unset($res1);

		$sql="	select dutmin[1] as dutmin1, dutmin[2] as dutmin2 into temporary bakmin from cars where carid=$car;
			select tstamp as tstamp_min,dut[1] as dut1_min,dut[2] as dut2_min into temporary dut_min from data.gps where carid=$car and lat>0 and lon>0 and dut[1]>0 and dut[2]>0 and tstamp >= '".$mm['tstampb']."'::timestamp with time zone + interval '1 minute' order by tstamp limit 1;
			select tstamp as tstamp_max,dut[1] as dut1_max,dut[2] as dut2_max into temporary dut_max from data.gps where carid=$car and lat>0 and lon>0 and dut[1]>0 and dut[2]>0 and tstamp <= '".$mm['tstamp']."'::timestamp with time zone - interval '1 minute' order by tstamp desc limit 1;
			select tstamp_min,tstamp_max,
			case 
			    when dut1_max<dutmin1 and dut1_min<dutmin1 then 0
			    when dut1_max<dutmin1 then dutmin1-dut1_min
			    when dut1_min<dutmin1 then dut1_max-dutmin1
			    else dut1_max-dut1_min
			    end as dut1_res,
			case 
			    when dut2_max<dutmin2 and dut2_min<dutmin2 then 0
			    when dut2_max<dutmin2 then dutmin2-dut2_min
			    when dut2_min<dutmin2 then dut2_max-dutmin2
			    else dut2_max-dut2_min 
			    end as dut2_res
			   from dut_min,dut_max,bakmin;";


/* $sql backup
		$sql="select tstamp as tstamp_min,dut[1] as dut1_min,dut[2] as dut2_min into temporary dut_min from data.gps where carid=$car and lat>0 and lon>0 and tstamp >= '".$mm['tstampb']."'::timestamp with time zone + interval '1 minute' order by tstamp limit 1;
		       select tstamp as tstamp_max,dut[1] as dut1_max,dut[2] as dut2_max into temporary dut_max from data.gps where carid=$car and lat>0 and lon>0 and tstamp <= '".$mm['tstamp']."'::timestamp with time zone - interval '1 minute' order by tstamp desc limit 1;
			select tstamp_min,tstamp_max,case when tstamp_max>=tstamp_min then dut1_max-dut1_min else dut1_min-dut1_max end as dut1_res,case when tstamp_max>=tstamp_min then dut2_max-dut2_min else dut2_min-dut2_max end as dut2_res
			   from dut_min,dut_max;";
*/
		$res1=pg_query($sql);

		if (pg_num_rows($res1)==1){$dut1_res=pg_result($res1,0,"dut1_res");$dut2_res=pg_result($res1,0,"dut2_res");}
		else {$dut1_res=0;$dut2_res=0;}
		
		//echo $dut1_res." ".$dut2_res."";
		
		pg_query ("drop table dut_min;drop table dut_max;drop table bakmin;");
		if($dut1_res>$x_up1||$dut2_res>$x_up2){
			//Заправка
			if ($dut1_res>=$x_up1)$sum_litr_zapravka+=$dut1_res*$em1;
			if ($dut2_res>=$x_up2)$sum_litr_zapravka+=$dut2_res*$em2;
			$count_z++;
			}
		if($dut1_res*-1>$x_down1||$dut2_res*-1>$x_down2){
			//Слив
				if ($dut1_res*-1>$x_down1)$sum_litr_sliv+=abs($dut1_res*$em1);
				if ($dut2_res*-1>$x_down2)$sum_litr_sliv+=abs($dut2_res*$em2);
			$count_s++;
			}
		
		}
	    
	    $dut_fact=($dut_start_all+$sum_litr_zapravka)-$dut_end_all-$sum_litr_sliv;
	    }
		$sday=$tstamp_all;
		
			$itogo_zap+=$sum_litr_zapravka;
			$itogo_sliv+=$sum_litr_sliv;
			$itogo_col_z+=$count_z;
			$itogo_col_s+=$count_s;
			$itogo_fact+=$dut_fact;
			    
			    $distance[count($distance) - 1] = round($distance[count($distance) - 1] / 1000, 3);
                            if($distance[count($distance) - 1]<0.5)$distance[count($distance) - 1]=0;
			    
			    if($distance[count($distance) - 1]<0.5){
				    $stop_time[count($stop_time) - 1]+=$move_time[count($move_time) - 1];
				    $move_time[count($move_time) - 1]=0;
				    }
		
                            // пересчет секунд в часы и минуты
                            $h = floor($move_time[count($move_time) - 1] / 3600);
                            $m = floor(($move_time[count($move_time) - 1] - $h * 3600) / 60);
                            $move_time_t = ($h > 0 ? $m > 0 ? "$h&nbsp;ч.&nbsp;$m&nbsp;мин." : "$h&nbsp;ч." : "$m&nbsp;мин.");        

                            // пересчет секунд в часы и минут
                            $h = floor($stop_time[count($stop_time) - 1] / 3600);
                            $m = floor(($stop_time[count($stop_time) - 1] - $h * 3600) / 60);
                            $stop_time_t = ($h > 0 ? $m > 0 ? "$h&nbsp;ч.&nbsp;$m&nbsp;мин." : "$h&nbsp;ч." : "$m&nbsp;мин.");        
                            
                            
                            
                            // пересчет секунд в часы и минут
                            $h = floor($moto_time[count($moto_time) - 1] / 3600);
                            $m = floor(($moto_time[count($moto_time) - 1] - $h * 3600) / 60);
                            $moto_time_t = ($h > 0 ? $m > 0 ? "$h&nbsp;ч.&nbsp;$m&nbsp;мин." : "$h&nbsp;ч." : "$m&nbsp;мин.");
                            
                            if($distance[count($distance) - 1]==0&&$dut_fact<1)$dut_fact=0;
                            
                            echo "<tr>";

                            echo     "<td align='center'>".($first_line ? $row : '&nbsp;')."</td>";
                            if($name){
                        	echo     "<td align='center'>".($first_line ? $name : '&nbsp;')."</td>";
                            }else echo     "<td>&nbsp</td>";
                            if($gosnum){
                        	echo     "<td align='center'>".($first_line ? $gosnum : '&nbsp;')."</td>";
                            }else echo     "<td>&nbsp</td>";

                            echo     "<td align='center'>".date('d.m.y', $epoch_prev)."</td>";
                            echo     "<td align='center'>".$move_time_t."</td>";
                            echo     "<td align='center'>".$moto_time_t."</td>";
                            echo     "<td align='center'>".$stop_time_t."</td>";
                            echo     "<td align='center'>".$distance[count($distance) - 1]."</td>";
			    if (!$tank1_installed && !$tank2_installed) {
                    			echo "<td align='center'><b>Нет настроек по ДУТам</b></td>";
                    			echo     "<td align='center'>-</td>";
                    			echo     "<td align='center'>-</td>";
                    			echo     "<td align='center'>-</td>";
                    			echo     "<td align='center'>-</td>";
                    			echo     "<td align='center'>-</td>";
                    			echo     "<td align='center'>-</td>";
                    			echo     "<td align='center'>-</td>";
                	    } else  {
                    			echo	"<td align='center'>".round($dut_start_all,0)."</td>";
                    			echo     "<td align='center'>$count_z</td>";
                        		echo     "<td align='center'>".round($sum_litr_zapravka,0)."</td>";
                        		echo     "<td align='center'>$count_s</td>";
                    			echo     "<td align='center'>".round($sum_litr_sliv,0)."</td>";
                        		echo     "<td align='center'>".round($dut_end_all,0)."</td>";
                        		echo     "<td align='center'>".round($dut_fact,0)."</td>";
                        		echo     "<td align='center'>".round(($dut_fact)/$distance[count($distance) - 1]*100,0)."</td>";
                	}
                    $dc++;
                    echo "</tr>";
                            //$speed_average[count($speed_average)] = 0; // средняя скорость
                            //$speed_max[count($speed_max)] = 0; // максимальная скорость
                            //$speed_count = 0; // количество треков скорости для определения средней скорости
                            $move_time[count($move_time)] = 0; // время движения
                            $stop_time[count($stop_time)] = 0; // время стоянки
                            $moto_time[count($moto_time)] = 0; //моточас
                            $distance[count($distance)] = 0; // пройденное расстояние
                            $dut1_fills_count[count($dut1_fills_count)] = 0; // количество заправок
                            $first_line = false;
                        }//END-2
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                        if ($speed > 5) {
                            
                            //if ($speed > $speed_max[count($speed_max) - 1]) {
                            //    $speed_max[count($speed_max) - 1] = $speed; // определение максимальной скорости
                            //}
                            //$speed_count++;
                            //$speed_average[count($speed_max) - 1] += $speed; // определение средней скорости
                            if ($epoch_prev) {
                                $move_time[count($move_time) - 1] += $epoch - $epoch_prev; // определение времени движения
                            }
                        } 

                        else {
                            if ($epoch_prev) {
                                $stop_time[count($stop_time) - 1] += $epoch - $epoch_prev; // определение времени стоянки
                            } 
                        }
                        if ($speed>5)$distance[count($distance) - 1] += $dest; // определение пройденного расстояния
			if($epoch_prev){
                    	    if ($volt1>1350&&$volt1<1500) {
                                $moto_time[count($moto_time) - 1] += $epoch - $epoch_prev; // определение времени движения
                        	}

			    else if ($volt1>2650&&$volt1<2900) {
                                $moto_time[count($moto_time) - 1] += $epoch - $epoch_prev; // определение времени движения
                        	}
			    }
			
			//echo "Volt1=".$volt1." Volt2=".$volt2."<br>";
			
                        $epoch_prev = $epoch;

                        // определение количества и объема заправо
                        if ($tank1_installed && $dut1 >= $dut1_min && $dut1 <= $dut1_max) { // если значения частоты валидны и ДУТ установле
                            $dut1_herz_percent = ($dut1 - $dut1_min) * 100 / ($dut1_max - $dut1_min); // процент от общего количества герц
                            $dut1_liter = intval($dut1_herz_percent * $dut1_litr / 100); // текущий показатель расхода топлива в литрах
                            if ($dut1_liter_prev && $dut1_liter > $dut1_liter_prev && $speed < 5 && $dut1_liter - $dut1_liter_prev > 5) { // если текущий показатель расхода топлива больше предыдущего
                                if (!$filling_start) {
                                    $dut1_liter_filling_start = $dut1_liter_prev;
                                }
                                $filling_start = true; // начало заправки
                            } else { 
                                if ($filling_start) { // если происходила заправка
                                    if ($dut1_liter - $dut1_liter_filling_start > 20) { // если объем заправки превысил 20 литров
                                        $dut1_fills_count[count($dut1_fills_count) - 1]++;
                                    }
                                    $filling_start = false;
                                }
                            }
                            $dut1_liter_prev = $dut1_liter;
                        }
                    }//END-1
		    $eday=$tstamp_all;
		    //$eday=date('Y-m-d H:i:s',$epoch_prev);
		    
		if ($tank1_installed || $tank2_installed){
			
			$dut_start_all=0;
			$dut_end_all=0;
			$dut_fact=0;

                        $sql_dut = "select gosnum,name,dutmin[1] dut1_min,dutmax[1] dut1_max,dutlitr[1] dut1_litr,dutmin[2] dut2_min,dutmax[2] dut2_max,dutlitr[2] dut2_litr,
        		(select dut[1] from data.gps where carid=$car and tstamp >= '$sday' order by tstamp limit 1) as dut1_start,
        		(select dut[1] from data.gps where carid=$car and tstamp <= '$eday' order by tstamp desc limit 1) as dut1_end,
        		(select dut[2] from data.gps where carid=$car and tstamp >= '$sday' order by tstamp limit 1) as dut2_start,
        		(select dut[2] from data.gps where carid=$car and tstamp <= '$eday' order by tstamp desc limit 1) as dut2_end
        		from cars where carid=$car;";

                    $res2 = pg_query($sql_dut);

                    extract (pg_fetch_array($res2), EXTR_OVERWRITE);
			
		    if ($tank1_installed){
				if ($dut1_start>$dut1_min)$dut_start_all+=($dut1_start-$dut1_min)*$em1;
				}
			if ($tank2_installed){
				if ($dut2_start>$dut2_min)$dut_start_all+=($dut2_start-$dut2_min)*$em2;
				}
		    if($dut_start_all>0){
			if ($tank1_installed){
				if ($dut1_end>$dut1_min)$dut_end_all+=($dut1_end-$dut1_min)*$em1;
				}
			if ($tank2_installed){
				if ($dut2_end>$dut2_min)$dut_end_all+=($dut2_end-$dut2_min)*$em2;
				}
			}

/*
			if ($dut1_start>0)$dut_start_all+=($dut1_start-$dut1_min)*$em1;
		        if ($dut2_start>0)$dut_start_all+=($dut2_start-$dut2_min)*$em2;
		    if($dut_start_all>0){
			if ($dut1_end>0)$dut_end_all+=($dut1_end-$dut1_min)*$em1;
			if ($dut2_end>0)$dut_end_all+=($dut2_end-$dut2_min)*$em2;
			}
*/
			$start_stop = get_data_stops ($car,$sday,$eday);
		    //$start_stop = report_general_dut_get_stops ($car,$sday,$eday);
			
			
			//$sum_litr_zapravka[$count]=0;
			//$sum_litr_sliv[$count]=0;
			$count_s=0;
			$count_z=0;
			$sum_litr_zapravka=0;
			$sum_litr_sliv=0;
			
		while (list($k,$mm)=each($start_stop)){
		unset($res1);
		
		$sql="	select dutmin[1] as dutmin1, dutmin[2] as dutmin2 into temporary bakmin from cars where carid=$car;
			select tstamp as tstamp_min,dut[1] as dut1_min,dut[2] as dut2_min into temporary dut_min from data.gps where carid=$car and lat>0 and lon>0 and dut[1]>0 and dut[2]>0 and tstamp >= '".$mm['tstampb']."'::timestamp with time zone + interval '1 minute' order by tstamp limit 1;
			select tstamp as tstamp_max,dut[1] as dut1_max,dut[2] as dut2_max into temporary dut_max from data.gps where carid=$car and lat>0 and lon>0 and dut[1]>0 and dut[2]>0 and tstamp <= '".$mm['tstamp']."'::timestamp with time zone - interval '1 minute' order by tstamp desc limit 1;
			select tstamp_min,tstamp_max,
			case 
			    when dut1_max<dutmin1 and dut1_min<dutmin1 then 0
			    when dut1_max<dutmin1 then dutmin1-dut1_min
			    when dut1_min<dutmin1 then dut1_max-dutmin1
			    else dut1_max-dut1_min
			    end as dut1_res,
			case 
			    when dut2_max<dutmin2 and dut2_min<dutmin2 then 0
			    when dut2_max<dutmin2 then dutmin2-dut2_min
			    when dut2_min<dutmin2 then dut2_max-dutmin2
			    else dut2_max-dut2_min 
			    end as dut2_res
			   from dut_min,dut_max,bakmin;";


		$res1=pg_query($sql);

		if (pg_num_rows($res1)==1){$dut1_res=pg_result($res1,0,"dut1_res");$dut2_res=pg_result($res1,0,"dut2_res");}
		else {$dut1_res=0;$dut2_res=0;}

		pg_query ("drop table dut_min;drop table dut_max;drop table bakmin;");
		
		if($dut1_res>$x_up1||$dut2_res>$x_up2){
			//Заправка
			echo $dut1_res;
			if ($dut1_res>=$x_up1)$sum_litr_zapravka+=$dut1_res*$em1;
			if ($dut2_res>=$x_up2)$sum_litr_zapravka+=$dut2_res*$em2;
			$count_z++;
			}
		if($dut1_res*-1>$x_down1||$dut2_res*-1>$x_down2){
			//Слив
			
				if ($dut1_res*-1>$x_down1)$sum_litr_sliv+=abs($dut1_res*$em1);
				if ($dut2_res*-1>$x_down2)$sum_litr_sliv+=abs($dut2_res*$em2);
			$count_s++;
			}
		
		}
		$dut_fact=($dut_start_all+$sum_litr_zapravka)-$dut_end_all-$sum_litr_sliv;
	    }
		
			$itogo_zap+=$sum_litr_zapravka;
			$itogo_sliv+=$sum_litr_sliv;
			$itogo_col_z+=$count_z;
			$itogo_col_s+=$count_s;
			if($distance[count($distance) - 1]!=0&&$dut_fact>1)$itogo_fact+=$dut_fact;

		
		
                    //$speed_average[count($speed_average) - 1] = round($speed_average[count($speed_average) - 1] / $speed_count, 2);
		    
		    $distance[count($distance) - 1] = round($distance[count($distance) - 1] / 1000, 3);
		    if($distance[count($distance) - 1]<0.5)$distance[count($distance) - 1]=0;
		    
		    if($distance[count($distance) - 1]<0.5){
			$stop_time[count($stop_time) - 1]+=$move_time[count($move_time) - 1];
			$move_time[count($move_time) - 1]=0;
			}
		    
                    // пересчет секунд в часы и минуты
                    $h = floor($move_time[count($move_time) - 1] / 3600);
                    $m = floor(($move_time[count($move_time) - 1] - $h * 3600) / 60);
                    $move_time_t = ($h > 0 ? $m > 0 ? "$h&nbsp;ч.&nbsp;$m&nbsp;мин." : "$h&nbsp;ч." : "$m&nbsp;мин.");

                    // пересчет секунд в часы и минуты
                    $h = floor($stop_time[count($stop_time) - 1] / 3600);
                    $m = floor(($stop_time[count($stop_time) - 1] - $h * 3600) / 60);
                    $stop_time_t = ($h > 0 ? $m > 0 ? "$h&nbsp;ч.&nbsp;$m&nbsp;мин." : "$h&nbsp;ч." : "$m&nbsp;мин.");
                    
                    //print_r($moto_time);
                    
                    $h = floor($moto_time[count($moto_time) - 1] / 3600);
                    $m = floor(($moto_time[count($moto_time) - 1] - $h * 3600) / 60);
                    $moto_time_t = ($h > 0 ? $m > 0 ? "$h&nbsp;ч.&nbsp;$m&nbsp;мин." : "$h&nbsp;ч." : "$m&nbsp;мин.");

			if($distance[count($distance) - 1]==0&&$dut_fact<1)$dut_fact=0;
		    
                    echo "<tr>";
                    echo     "<td align='center'>".($first_line ? $row : '&nbsp;')."</td>";
                    echo     "<td align='center'>".($first_line ? $name : '&nbsp;')."</td>";
                    if($gosnum )echo     "<td align='center'>".($first_line ? $gosnum : '&nbsp;')."</td>";
                    else echo "<td>&nbsp;</td>";
                    echo     "<td align='center'>".date('d.m.y', $epoch_prev)."</td>";
                    echo     "<td align='center'>".$move_time_t."</td>";
                    echo     "<td align='center'>".$moto_time_t."</td>";
                    echo     "<td align='center'>".$stop_time_t."</td>";
                    echo     "<td align='center'>".$distance[count($distance) - 1]."</td>";
                    if (!$tank1_installed && !$tank2_installed) {
                        echo "<td align='center'><b>Нет настроек по ДУТам</b></td>";
                        echo     "<td align='center'>-</td>";
                    	echo     "<td align='center'>-</td>";
                    	echo     "<td align='center'>-</td>";
                    	echo     "<td align='center'>-</td>";
                    	echo     "<td align='center'>-</td>";
                    	echo     "<td align='center'>-</td>";
                    	echo     "<td align='center'>-</td>";
                    } else {
                        echo	 "<td align='center'>".round($dut_start_all,0)."</td>";
                        echo     "<td align='center'>$count_z</td>";
                        echo     "<td align='center'>".round($sum_litr_zapravka,0)."</td>";
                        echo     "<td align='center'>$count_s</td>";
                        echo     "<td align='center'>".round($sum_litr_sliv,0)."</td>";
                        echo     "<td align='center'>".round($dut_end_all,0)."</td>";
                        echo     "<td align='center'>".round($dut_fact,0)."</td>";
                        echo     "<td align='center'>".round(($dut_fact)/$distance[count($distance) - 1]*100,0)."</td>";
                    } 
                    echo "</tr>";

                    if (!$first_line) { //ИТОГО

			$dut_start_all=0;
			$dut_end_all=0;

                    $sql = "select gosnum,name,dutmin[1] dut1_min,dutmax[1] dut1_max,dutlitr[1] dut1_litr,dutmin[2] dut2_min,dutmax[2] dut2_max,dutlitr[2] dut2_litr,
        		(select dut[1] from data.gps where carid=$car and tstamp >= '$tstimefrom' order by tstamp limit 1) as dut1_start,
        		(select dut[1] from data.gps where carid=$car and tstamp <= '$tstimeto' order by tstamp desc limit 1) as dut1_end,
        		(select dut[2] from data.gps where carid=$car and tstamp >= '$tstimefrom' order by tstamp limit 1) as dut2_start,
        		(select dut[2] from data.gps where carid=$car and tstamp <= '$tstimeto' order by tstamp desc limit 1) as dut2_end
        		from cars where carid=$car;";

                    $res = pg_query($sql);
                    extract (pg_fetch_array($res), EXTR_OVERWRITE);

		    if ($tank1_installed){
				if ($dut1_start>$dut1_min)$dut_start_all+=($dut1_start-$dut1_min)*$em1;
				}
			if ($tank2_installed){
				if ($dut2_start>$dut2_min)$dut_start_all+=($dut2_start-$dut2_min)*$em2;
				}
		    if($dut_start_all>0){
			if ($tank1_installed){
				if ($dut1_end>$dut1_min)$dut_end_all+=($dut1_end-$dut1_min)*$em1;
				}
			if ($tank2_installed){
				if ($dut2_end>$dut2_min)$dut_end_all+=($dut2_end-$dut2_min)*$em2;
				}
			}


/*
                    if ($dut1_start>0)$dut_start_all+=($dut1_start-$dut1_min)*$em;
		        if ($dut2_start>0)$dut_start_all+=($dut2_start-$dut2_min)*$em;
		    if($dut_start_all>0){
			if ($dut1_end>0)$dut_end_all+=($dut1_end-$dut1_min)*$em;
			if ($dut2_end>0)$dut_end_all+=($dut2_end-$dut2_min)*$em;
			}
*/                    
                        // пересчет секунд в часы и минуты
                        $h = floor(array_sum($move_time) / 3600);
                        $m = floor((array_sum($move_time) - $h * 3600) / 60);
                        $move_time_t = ($h > 0 ? $m > 0 ? "$h&nbsp;ч.&nbsp;$m&nbsp;мин." : "$h&nbsp;ч." : "$m&nbsp;мин.");        

                        // пересчет секунд в часы и минуты
                        $h = floor(array_sum($stop_time) / 3600);
                        $m = floor((array_sum($stop_time) - $h * 3600) / 60);
                        $stop_time_t = ($h > 0 ? $m > 0 ? "$h&nbsp;ч.&nbsp;$m&nbsp;мин." : "$h&nbsp;ч." : "$m&nbsp;мин.");        

                        $h = floor(array_sum($moto_time) / 3600);
                        $m = floor((array_sum($moto_time) - $h * 3600) / 60);
                        $moto_time_t = ($h > 0 ? $m > 0 ? "$h&nbsp;ч.&nbsp;$m&nbsp;мин." : "$h&nbsp;ч." : "$m&nbsp;мин.");

                        echo "<tr>";
                        echo     "<td>&nbsp;</td>";
                        echo     "<td>&nbsp;</td>";
                        echo     "<td>&nbsp;</td>";
                        echo     "<td align='center'><b><b>Итого</b></b></td>";
                        echo     "<td align='center'><b>".$move_time_t."</b></td>";
                        echo     "<td align='center'><b>".$moto_time_t."</b></td>";
                        echo     "<td align='center'><b>".$stop_time_t."</b></td>";
                        echo     "<td align='center'><b>".array_sum($distance)."</b></td>";
                        if ($tank1_installed || $tank2_installed) {
                            echo "<td align='center'><b>".round($dut_start_all,0)."</b></td>";
                            echo "<td align='center'><b>$itogo_col_z</b></td>";
                            echo "<td align='center'><b>".round($itogo_zap,0)."</b></td>";
                            echo "<td align='center'><b>$itogo_col_s</b></td>";
                            echo "<td align='center'><b>".round($itogo_sliv,0)."</b></td>";
                            echo "<td align='center'><b>".round($dut_end_all,0)."</b></td>";
                            echo "<td align='center'><b>".round($itogo_fact,0)."</b></td>";
                            echo "<td align='center'><b>-</b></td>";
                        } else {
                            echo "<td>&nbsp;</td>";
                            echo "<td>&nbsp;</td>";
                            echo "<td>&nbsp;</td>";
                            echo "<td>&nbsp;</td>";
                            echo "<td>&nbsp;</td>";
                            echo "<td>&nbsp;</td>";
                            echo "<td>&nbsp;</td>";
                            echo "<td>&nbsp;</td>";
                        }
                        echo "</tr>";

                    }
                    $row++;
                }
            ?>
        </tbody>
    </table>
</body>



<?
/*

        $datefrom = date('Y-m-d', strtotime($_REQUEST['datefrom']));
        $dateto = date('Y-m-d', strtotime($_REQUEST['dateto']));
        $timefrom = $_REQUEST['timefrom'];
        $timeto = $_REQUEST['timeto'];
	
	
	$count=0;
	$all_probeg=0;
	$all_sliv=0;
	$all_zapravka=0;
        $all_rasxod=0;
        $mid_rasxod=0;
        foreach ($_REQUEST['cars'] as $car => $value) {
        	
        	$sql = "select gosnum,fiodriver1,name,dutmin[1] dut1_min,dutmax[1] dut1_max,dutlitr[1] dut1_litr,dutmin[2] dut2_min,dutmax[2] dut2_max,dutlitr[2] dut2_litr,
        		(select dut[1] from data.gps where carid=$car and tstamp >= '$tstimefrom' order by tstamp limit 1) as dut1_start,
        		(select dut[1] from data.gps where carid=$car and tstamp <= '$tstimeto' order by tstamp desc limit 1) as dut1_end,
        		(select dut[2] from data.gps where carid=$car and tstamp >= '$tstimefrom' order by tstamp limit 1) as dut2_start,
        		(select dut[2] from data.gps where carid=$car and tstamp <= '$tstimeto' order by tstamp desc limit 1) as dut2_end
        		from cars where carid=$car;";
        	$res = pg_query($sql);
        	extract (pg_fetch_array($res),EXTR_OVERWRITE);
		if($dut1_min && $dut1_max && $dut1_litr){
			$tank1_installed=true;
			$em=$dut1_litr/($dut1_max-$dut1_min);
		}else $tank1_installed=false;
		
		if($dut2_min && $dut2_max && $dut2_litr){
			$tank2_installed=true;
			$em=$dut2_litr/($dut2_max-$dut2_min);					//Высчитываем единицу/литр
		}else $tank2_installed=false;
		if(!$tank1_installed && !$tank2_installed)continue;				//если оба бака не установлены то начинаем заного
		

		$count_z[$count]=0;
        	$count_s[$count]=0;
        	$sum_rasxod[$count]=0;
		$sum_probeg[$count] = get_general_probeg($car,$tstimefrom,$tstimeto);			//Пробег для каждой машины
		$all_probeg+=$sum_probeg[$count];							//Пробег по всем машинам
		
		$x_down=round(1/$em);								//Значение частоты при сливе
		$x_up=round(5/$em);								//Значение частоты при заправке
		$fio[$count]=$fiodriver1;
		$goss[$count]=$name;
		
		//echo "$x_up $x_down <br>";
		
		$dut_start_all[$count]=0;
		$dut_end_all[$count]=0;
		if ($dut1_start>0)$dut_start_all[$count]+=($dut1_start-$dut1_min)*$em;
		if ($dut2_start>0)$dut_start_all[$count]+=($dut2_start-$dut2_min)*$em;
		if($dut_start_all[$count]>0){
			if ($dut1_end>0)$dut_end_all[$count]+=($dut1_end-$dut1_min)*$em;
			if ($dut2_end>0)$dut_end_all[$count]+=($dut2_end-$dut2_min)*$em;
			}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		$start_stop = report_general_dut_get_stops ($car,$tstimefrom,$tstimeto);


			$sum_litr_zapravka[$count]=0;
			$sum_litr_sliv[$count]=0;
		
		while (list($k,$mm)=each($start_stop)){
		unset($res1);
		$sql="select tstamp as tstamp_min,dut[1] as dut1_min,dut[2] as dut2_min into temporary dut_min from data.gps where carid=$car and lat>0 and lon>0 and tstamp >= '".$mm['tstampb']."'::timestamp with time zone + interval '1 minute' order by tstamp limit 1;
		       select tstamp as tstamp_max,dut[1] as dut1_max,dut[2] as dut2_max into temporary dut_max from data.gps where carid=$car and lat>0 and lon>0 and tstamp <= '".$mm['tstamp']."'::timestamp with time zone - interval '1 minute' order by tstamp desc limit 1;
			select tstamp_min,tstamp_max,case when tstamp_max>=tstamp_min then dut1_max-dut1_min else dut1_min-dut1_max end as dut1_res,case when tstamp_max>=tstamp_min then dut2_max-dut2_min else dut2_min-dut2_max end as dut2_res
			   from dut_min,dut_max;";

		$res1=pg_query($sql);

		if (pg_num_rows($res1)==1){$dut1_res=pg_result($res1,0,"dut1_res");$dut2_res=pg_result($res1,0,"dut2_res");}
		else {$dut1_res=0;$dut2_res=0;}

		pg_query ("drop table dut_min;drop table dut_max;");
		
		if($dut1_res>$x_up||$dut2_res>$x_up){
			//Заправка
			if ($dut1_res>=$x_up)$sum_lirt_zapravka[$count]+=$dut1_res*$em;
			if ($dut2_res>=$x_up)$sum_lirt_zapravka[$count]+=$dut2_res*$em;
			$count_z[$count]++;
			}
		if($dut1_res*-1>$x_down||$dut2_res*-1>$x_down){
			//Слив
			
				if ($dut1_res*-1>$x_down)$sum_lirt_sliv[$count]+=abs($dut1_res*$em);
				if ($dut2_res*-1>$x_down)$sum_lirt_sliv[$count]+=abs($dut2_res*$em);
			$count_s[$count]++;
			}
		
		}
$sum_rasxod[$count] = ($dut_start_all[$count] + $sum_lirt_zapravka[$count]) - ($dut_end_all[$count] + $sum_lirt_sliv[$count]);
$all_rasxod += $sum_rasxod[$count];
$all_zapravka += $sum_lirt_zapravka[$count] ;
$all_sliv += $sum_lirt_sliv[$count];
$count++;


}		
$mid_rasxod=round($all_rasxod/$count,3);			

*/
function get_min_middle_volt($carid,$tfrom,$tto){
$sql="select speed, volt[1] as volt1 from data.gps where carid =".$carid." and tstamp >='".$tfrom."' and tstamp <='".$tto."' and lat>0 and lon>0
	order by tstamp;";
$volt1_all=0;
$count=0;
$res=pg_query($sql);
while($track = pg_fetch_array($res)){
	extract($track, EXTR_OVERWRITE);
	if($speed==0){
		$volt1_all+=$volt1;
		$count++;
		}
	}
return round($volt1_all/$count,0);
}//Функция возвращает среднее значение внутреннего заряда акумулятора при скорости 0


function get_general_probeg ($carid,$tfrom,$tto){
$sql="select dest,speed, from data.gps where carid =".$carid." and tstamp >='".$tfrom."' and tstamp <='".$tto."' and lat>0 and lon>0
	order by tstamp;";
$res=pg_query($sql);
$dist=0;
while($track = pg_fetch_array($res)){
	extract($track, EXTR_OVERWRITE);
	if($speed>5){
		$dist+=$dest;
		}
	if($speed==0){
		//echo "$dut2<br>";
		}
	}
return $dist/1000;
}

function report_general_dut_get_stops ($carid,$tfrom,$tto){
 $sql="
select
	carid,
	tstamp,
	lag(tstamp) over (partition by carid order by tstamp) as tstampb,
	lat,
	lon,
	lag(lat) over (partition by carid order by tstamp) as latb,
	lag(lon) over (partition by carid order by tstamp) as lonb,
	dest,
	speed,
	azimut,
	dut[0]as dut1,
	dut[1] as dut2,
	gsmsignal,
	gpsdop,
	signal_restart
	into temporary ttt1
	from data.gps where carid =".$carid." and tstamp >='".$tfrom."' and tstamp <='".$tto."' and lat>0 and lon>0
	order by tstamp;
update ttt1 as tmp1 set tstampb=(select tstamp from data.gps as dg where dg.carid=tmp1.carid and dg.tstamp < tmp1.tstamp and dg.lat>0 and dg.lon>0 order by tstamp desc limit 1),latb=(select lat from data.gps as dg where dg.carid=tmp1.carid and dg.tstamp <= tmp1.tstamp and dg.lat>0 and dg.lon>0 order by tstamp desc limit 1), lonb=(select lon from data.gps as dg where dg.carid=tmp1.carid and dg.tstamp <= tmp1.tstamp and dg.lat>0 and dg.lon>0 order by tstamp desc limit 1) where tstampb is null;
update ttt1 set signal_restart=(select count(*) from data.gps as dg where dg.tstamp<ttt1.tstamp and dg.tstamp>ttt1.tstampb and signal_restart=1);
select * from ttt1 order by tstamp;";

  $arr[]=array();
  $res=pg_query($sql);
  if (pg_num_rows($res)<2){
   $result = array('type'=>'error', 'regions'=> array('text'=>'нет данных за указанный период'));
  }
  else{
  while ($data_new=pg_fetch_array($res)){
    //старые данные уже есть, теперь функция принимания решения заносить ли новые данные в старые или из старых данных создать отрезок а новые начать обрабатывать
    //if func_create_new_point()==true {выводим старый отрезок в массив, создаём новый отрезок}
    // else {передаём новые и старые данные в функцию для слепливания и обновляем этим старые данные}
    if (!is_array($data))$data=$data_new;
    else{
    if (report_general_dut_compare_for_split_data ($data,$data_new)){$data=report_general_dut_split_data($data,$data_new);}
    else {
        $tstamp_r=strtotime($data['tstamp'])-strtotime($data['tstampb']);
	if (($data['speed']<=5)and ($tstamp_r>=189)){
	/// это стоянка
	$arr[]= array(
	    'tstamp'=>$data['tstamp'],
	    'tstampb'=>$data['tstampb'],
	    'dest'=>$data['dest'],
	    'speed'=>$data['speed']
	);
	}//if stop
	$data=$data_new;
	}
    }
   }
  }
pg_query ("drop table ttt1");
return $arr;
}

function report_general_dut_compare_for_split_data($data,$data_new){
 $ret=true;
 // определяем движение машины
 if (($data['speed']<=5)&&($data_new['speed']>5))$ret=false;//считаем что машина поехала
 if (($data['speed']>5)&&($data_new['speed']<=5))$ret=false;//считаем что машина остановилась

 return $ret;
}//function compare_for_split_data

function report_general_dut_split_data ($data,$data_new){
 $res=$data;
 $res['tstamp']=$data_new['tstamp'];
 $res['dest']=$data['dest']+$data_new['dest'];
 $res['speed']=round(($data['speed']+$data_new['speed'])/2);
 return $res;
}//function split_data

function get_data_stops($carid,$tfrom,$tto){
$start=0;
$stop=0;
$i=0;
$check1=false;					//Флаг установки начала остановки
$check2=false;					//Флаг установки конца остановки
//$check3=false;					//Флаг следующей остановки
$sql="select tstamp,speed from data.gps where carid=".$carid." and tstamp>='".$tfrom."' and tstamp<='".$tto."' and lat>0 and lon>0;";
//echo $sql;
$res=pg_query($sql);
while($tmp=pg_fetch_array($res)){
	extract ($tmp,EXTR_OVERWRITE);
	if($speed<=7&&$check1==false){		//В этом блоке устанавливаем метку начала остановки
		$start=$tstamp;
		$check1=true;
		//$check3=true;
	}
	if($speed<=7&&$check1==true){		//В этом блоке устанавливаем метку конца остановки
		$stop=$tstamp;
		$check2=true;
	}
	if($speed>7&&$check1==true&&$check2==true){			//В этом блоке записываем начало и конец остановки в выходной массив
		if(($result=strtotime($stop)-strtotime($start))>240){
			$arr[$i]['tstampb']=$start;
			$arr[$i]['tstamp']=$stop;
			$check1=false;
			$check2=false;
			//$check3=true;
			$i++;
			//echo $start." ".$stop."<br>";
		}
		else {
			$check1=false;
			$check2=false;
		}
	}
	else if($speed>7&&($check1==false||$check2==false)) {		//В этом Блоке если скорость >7 но метки начало или конца остановки еще нет
		$check1=false;						//то флаги установок сбросить в false
		$check2=false;
	}
}
if($check1==true&&$check2==true){
	$arr[$i]['tstampb']=$start;
	$arr[$i]['tstamp']=$stop;
//	echo $start." ".$stop."<br>";
}
return $arr;
}

?>
